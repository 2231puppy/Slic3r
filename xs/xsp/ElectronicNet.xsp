%module{Slic3r::XS};

%{
#include <xsinit.h>
#include "libslic3r/ElectronicNet.hpp"
%}

%name{Slic3r::Electronics::ElectronicNet} class ElectronicNet {
    ElectronicNet(std::string name)
    %code{% RETVAL = new ElectronicNet(name); %};
    //~ElectronicNet(); -- No destructor, perl garbage collector would destroy the object under certain circumstances
    Clone<ElectronicNet> clone()
        %code{% RETVAL = THIS; %};
    void addPin(std::string part, std::string pin, std::string gate);
};

%name{Slic3r::Electronics::RubberBand} class RubberBand {
    RubberBand();
    ~RubberBand();
    Clone<RubberBand> clone()
        %code{% RETVAL = THIS; %};
    Ref<Pointf3> a()
        %code{% RETVAL = &THIS->a; %};
    Ref<Pointf3> b()
        %code{% RETVAL = &THIS->b; %};
};